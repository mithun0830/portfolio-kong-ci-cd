name: Kong Deployment

on:
  push:
    branches: [ main ]
    paths:
      - 'kong/specs/**'

env:
  KONG_ADMIN_URL: http://34.55.116.90:8001

jobs:
  validate-and-prepare:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Get latest deck version
        run: |
          LATEST_VERSION=$(curl -s https://api.github.com/repos/kong/deck/releases/latest | jq -r .tag_name)
          DOWNLOAD_URL=$(curl -s https://api.github.com/repos/kong/deck/releases/latest | jq -r '.assets[] | select(.name | contains("linux_amd64")) | .browser_download_url')
          echo "DECK_VERSION=$LATEST_VERSION" >> $GITHUB_ENV
          echo "DECK_DOWNLOAD_URL=$DOWNLOAD_URL" >> $GITHUB_ENV

      - name: Install deck
        run: |
          curl -sL ${{ env.DECK_DOWNLOAD_URL }} -o deck.tar.gz
          tar -xf deck.tar.gz
          sudo mv deck /usr/local/bin/
          deck version

      - name: Ping Kong
        run: |
          response=$(curl -s $KONG_ADMIN_URL/status)
          if [ $? -ne 0 ]; then
            echo "Failed to ping Kong instance"
            exit 1
          fi
          echo "Kong instance is healthy"

      - name: Convert Swagger to Declarative
        run: |
          deck file openapi2kong --spec kong/specs/profile_swagger_v1.0.yaml --output-file ${{ github.workspace }}/profilebuilder.yml
          if [ $? -ne 0 ]; then
            echo "Failed to convert swagger to declarative format"
            exit 1
          fi

      - name: Deck Diff
        run: |
          deck diff --state ${{ github.workspace }}/profilebuilder.yml --kong-addr $KONG_ADMIN_URL
          if [ $? -ne 0 ]; then
            echo "Deck diff shows conflicts or errors"
            exit 1
          fi

      - name: Upload Declarative Config
        uses: actions/upload-artifact@v4
        with:
          name: kong-config
          path: ${{ github.workspace }}/profilebuilder.yml

  deploy:
    needs: validate-and-prepare
    runs-on: ubuntu-latest
    environment:
      name: production
      url: ${{ env.KONG_ADMIN_URL }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download Declarative Config
        uses: actions/download-artifact@v4
        with:
          name: kong-config
          path: ${{ github.workspace }}

      - name: Display structure of downloaded files
        run: ls -R ${{ github.workspace }}

      - name: Get latest deck version
        run: |
          LATEST_VERSION=$(curl -s https://api.github.com/repos/kong/deck/releases/latest | jq -r .tag_name)
          DOWNLOAD_URL=$(curl -s https://api.github.com/repos/kong/deck/releases/latest | jq -r '.assets[] | select(.name | contains("linux_amd64")) | .browser_download_url')
          echo "DECK_VERSION=$LATEST_VERSION" >> $GITHUB_ENV
          echo "DECK_DOWNLOAD_URL=$DOWNLOAD_URL" >> $GITHUB_ENV

      - name: Install deck
        run: |
          curl -sL ${{ env.DECK_DOWNLOAD_URL }} -o deck.tar.gz
          tar -xf deck.tar.gz
          sudo mv deck /usr/local/bin/
          deck version

      - name: Deploy to Kong
        run: |
          deck sync --state ${{ github.workspace }}/profilebuilder.yml --kong-addr $KONG_ADMIN_URL --select-tag profilebuilder
          if [ $? -ne 0 ]; then
            echo "Failed to sync configuration with Kong"
            exit 1
          fi
          echo "Successfully deployed to Kong"
